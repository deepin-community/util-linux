Index: b/libmount/src/context_mount.c
===================================================================
--- a/libmount/src/context_mount.c
+++ b/libmount/src/context_mount.c
@@ -1026,9 +1026,13 @@ again:
 	 * Read-only device or already read-only mounted FS.
 	 * Try mount the filesystem read-only.
 	 */
+#define NTFS_VOLUME_FUSE_ERROR 21
+	const char *fstype = mnt_context_get_fstype(cxt);
 	if ((rc == -EROFS && !mnt_context_syscall_called(cxt))	/* before syscall; rdonly loopdev */
 	     || mnt_context_get_syscall_errno(cxt) == EROFS	/* syscall failed with EROFS */
 	     || mnt_context_get_syscall_errno(cxt) == EACCES	/* syscall failed with EACCES */
+	     || (mnt_context_get_helper_status(cxt) == NTFS_VOLUME_FUSE_ERROR &&   /* /sbin/mount.ntfs-3g mount failed with NTFS_VOLUME_FUSE_ERROR 21 */
+		    fstype && strncmp( fstype, "ntfs", 4) == 0) 
 	     || (mnt_context_get_syscall_errno(cxt) == EBUSY	/* already ro-mounted FS */
 		 && is_source_already_rdonly(cxt)))
 	{
@@ -1047,9 +1051,15 @@ again:
 			mnt_context_reset_status(cxt);
 			mnt_context_set_mflags(cxt, mflags | MS_RDONLY);
 			cxt->flags |= MNT_FL_FORCED_RDONLY;
+			if (fstype && strncmp( fstype, "ntfs", 4) == 0) {
+				if (cxt->fs && cxt->fs->optstr && strncmp(cxt->fs->optstr, "rw", 2) == 0) {
+					cxt->fs->optstr[1] = 'o';
+				}
+			}
 			goto again;
 		}
 	}
+#undef NTFS_VOLUME_FUSE_ERROR
 
 	if (rc == 0)
 		rc = mnt_context_call_hooks(cxt, MNT_STAGE_POST);
@@ -1409,15 +1419,22 @@ int mnt_context_get_mount_excode(
 	const char *tgt = mnt_context_get_target(cxt);
 	const char *src = mnt_context_get_source(cxt);
 
+#define NTFS_VOLUME_FUSE_ERROR 21
 	if (mnt_context_helper_executed(cxt)) {
 		/*
 		 * /sbin/mount.<type> called, return status
 		 */
 		if (rc == -MNT_ERR_APPLYFLAGS && buf)
 			snprintf(buf, bufsz, _("WARNING: failed to apply propagation flags"));
+		if (cxt->helper_status == NTFS_VOLUME_FUSE_ERROR && !strncmp(mnt_context_get_fstype(cxt), "ntfs", 4)) {
+			char buf[PATH_MAX] = {0};
+			if (realpath(cxt->helper, buf) && strcmp(basename(buf), "ntfs-3g") == 0)
+				return MNT_ERR_AUTH_WITH_NTFS_3G;
+		}
 
 		return mnt_context_get_helper_status(cxt);
 	}
+#undef NTFS_VOLUME_FUSE_ERROR
 
 	if (rc == 0 && mnt_context_get_status(cxt) == 1) {
 		/*
Index: b/libmount/src/libmount.h.in
===================================================================
--- a/libmount/src/libmount.h.in
+++ b/libmount/src/libmount.h.in
@@ -218,6 +218,12 @@ enum {
  */
 #define MNT_ERR_NAMESPACE    5009
 /**
+ * MNT_ERR_AUTH_WITH_NTFS_3G:
+ *
+ * failed to mount ntfs filesystem with ntfs-3g due to permission
+ */
+#define MNT_ERR_AUTH_WITH_NTFS_3G 5100
+/**
  * MNT_ERR_ONLYONCE:
  *
  * filesystem mounted, but --onlyonce specified
